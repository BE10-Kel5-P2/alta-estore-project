// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ProductUseCase is an autogenerated mock type for the ProductUseCase type
type ProductUseCase struct {
	mock.Mock
}

// DeleteItemAdmin provides a mock function with given fields:
func (_m *ProductUseCase) DeleteItemAdmin() {
	_m.Called()
}

// GetAllItems provides a mock function with given fields:
func (_m *ProductUseCase) GetAllItems() {
	_m.Called()
}

// GetItemUser provides a mock function with given fields:
func (_m *ProductUseCase) GetItemUser() {
	_m.Called()
}

// PostCartUser provides a mock function with given fields:
func (_m *ProductUseCase) PostCartUser() {
	_m.Called()
}

// PostItemAdmin provides a mock function with given fields:
func (_m *ProductUseCase) PostItemAdmin() {
	_m.Called()
}

// UpdateItemAdmin provides a mock function with given fields:
func (_m *ProductUseCase) UpdateItemAdmin() {
	_m.Called()
}

type mockConstructorTestingTNewProductUseCase interface {
	mock.TestingT
	Cleanup(func())
}

// NewProductUseCase creates a new instance of ProductUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewProductUseCase(t mockConstructorTestingTNewProductUseCase) *ProductUseCase {
	mock := &ProductUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
